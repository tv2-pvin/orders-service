buildscript {
    println projectDir

    dependencies {
        classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '3.0.1')
        classpath(group: 'com.bmuschko', name: 'gradle-docker-plugin', version: '3.0.12')
        classpath "com.avast.gradle:docker-compose-gradle-plugin:0.4.5"
        // liquibase related plugins
        classpath 'org.postgresql:postgresql:9.4.1208'
        classpath 'mysql:mysql-connector-java:5.1.37'
    }
}

plugins {
    id('org.sonarqube') version('2.5')
}

ext {
    aspectjVersion = '1.8.10'
}

// Apply plugins
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'com.bmuschko.docker-remote-api'
apply plugin: 'java'
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: 'war'
apply plugin: 'groovy'
apply plugin: 'docker-compose'
apply plugin: "jacoco"
apply plugin: "org.sonarqube"

// Apply modules/tasks
apply from: file('gradle/version.gradle')
apply from: file('gradle/war.gradle')

// Project specific dependencies
dependencies {
    apply from: file('gradle/dependencies.gradle'), to: dependencies
}


task wrapper(type: Wrapper) {
    gradleVersion = '3.5.1'
}

// docker compatibility version
ext.compatibilityVersion = '1.8'

task buildDockerProductImage(type: com.bmuschko.gradle.docker.tasks.image.DockerBuildImage) {
    dependsOn build
    quiet = false
    pull = true
    inputDir = file('build')
    tag = "${project.projectName}:${project.version}"
}

task pushDockerProductImage(type: com.bmuschko.gradle.docker.tasks.image.DockerPushImage) {
    imageName = "${project.projectName}:${project.version}"
}